{
	"info": {
		"_postman_id": "0f5b24cb-dbb2-47bb-b181-a5be95dca087",
		"name": "Drivety API Copy",
		"description": "API collection for testing the Drivety application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36773225"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxOWY3MzA5Ni1kYjlkLTQ2MjQtYTlmMy00NmIwOTFmMWQzNDgiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InVzZXIiLCJpYXQiOjE3NDcyNjI3NTYsImV4cCI6MTc0NzM0OTE1Nn0.zeBk4g_LLMHStIlIzkPlsenqKd6fC7dkjdsOHUZxGC0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@exxxample.com\",\n    \"password\": \"Password123!\",\n    \"username\":\"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, save the tokens",
									"if (pm.response.code === 200 && jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"    console.log('Tokens saved to environment variables');",
									"    ",
									"    // Try to extract user ID from token",
									"    try {",
									"        const tokenParts = jsonData.data.accessToken.split('.');",
									"        if (tokenParts.length === 3) {",
									"            const payload = JSON.parse(atob(tokenParts[1]));",
									"            if (payload.userId) {",
									"                pm.environment.set(\"userId\", payload.userId);",
									"                console.log('User ID saved:', payload.userId);",
									"            }",
									"        }",
									"    } catch (e) {",
									"        console.log('Could not extract user ID from token:', e);",
									"    }",
									"} else {",
									"    console.log('Error response:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"driver1@drivety.com\",\n    \"password\": \"password123\",\n    \"username\":\"test\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login to get access token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, save the tokens",
									"if (pm.response.code === 200 && jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"    console.log('Tokens refreshed and saved to environment variables');",
									"} else {",
									"    console.log('Error refreshing token:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if we have a refresh token",
									"const refreshToken = pm.environment.get(\"refreshToken\");",
									"",
									"if (!refreshToken) {",
									"    console.log('Warning: No refresh token found in environment variables. This request will likely fail.');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh-token",
								"value": "{{refreshToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh access token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, clear the tokens",
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"accessToken\", \"\");",
									"    pm.environment.set(\"refreshToken\", \"\");",
									"    console.log('Tokens cleared from environment variables');",
									"} else {",
									"    console.log('Error during logout:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if we have an access token",
									"const accessToken = pm.environment.get(\"accessToken\");",
									"",
									"if (!accessToken) {",
									"    console.log('Warning: No access token found in environment variables. This request will likely fail.');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate tokens"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Drivers",
			"item": [
				{
					"name": "Get Current User Driver",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/drivers/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								"me"
							]
						},
						"description": "Get driver profile for current user"
					},
					"response": []
				}
			],
			"description": "Driver management endpoints"
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "Get Vehicle by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "42d3772b-eb5b-4254-b7c9-82e41dec4084"
								}
							]
						},
						"description": "Get vehicle by ID"
					},
					"response": []
				},
				{
					"name": "create Vehicle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Toyota Camry\",\n    \"year\": 2022,\n    \"plateNumber\": \"ABCjk123\",\n    \"status\": \"ACTIVE\",\n    \"fuelType\": \"GASOLINE\",\n    \"fuelLevel\": 75.5,\n    \"insuranceExpiry\": \"2025-12-31T00:00:00.000Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/vehicles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Get vehicle by ID"
					},
					"response": []
				}
			],
			"description": "Vehicle management endpoints"
		},
		{
			"name": "Trips",
			"item": [
				{
					"name": "Start Trip",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driverId\": \"85a4b673-e39d-4223-afa6-a635b805b1bf\",\n    \"vehicleId\": \"42d3772b-eb5b-4254-b7c9-82e41dec4084\",\n    \"startLocation\": \"123 Main St, Anytown, USA\",\n    \"startLatitude\": 40.7128,\n  \"startLongitude\": -74.0060\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trips/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"start"
							]
						},
						"description": "Start a new trip"
					},
					"response": []
				},
				{
					"name": "End Trip",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"endLocation\": \"456 Oak St, Anytown, USA\",\n  \"endLatitude\": 40.7589,\n  \"endLongitude\": -73.9851\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trips/:tripId/end",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								":tripId",
								"end"
							],
							"variable": [
								{
									"key": "tripId",
									"value": "94c3787f-fb92-433d-a601-5218ef4bb0fc"
								}
							]
						},
						"description": "End an active trip"
					},
					"response": []
				},
				{
					"name": "Get Driver Trips",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/trips/driver/:driverId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"driver",
								":driverId"
							],
							"variable": [
								{
									"key": "driverId",
									"value": "85a4b673-e39d-4223-afa6-a635b805b1bf"
								}
							]
						},
						"description": "Get all trips for a specific driver"
					},
					"response": []
				}
			],
			"description": "Trip management endpoints"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI5YmViMTE3Mi0wYmQzLTRiYTktOThlNC02YWM3NjRiYzhkZWQiLCJlbWFpbCI6ImRyaXZlcjFAZHJpdmV0eS5jb20iLCJ1c2VybmFtZSI6InVzZXIiLCJpYXQiOjE3NDgxNzMxMDIsImV4cCI6MTc0ODI1OTUwMn0.LFlBo5X5tCiyZJ5NaipC_xD0XrOUD6F1hZtOTGKfOdA",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8005",
			"type": "string"
		}
	]
}