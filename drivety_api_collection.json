{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
		"name": "Drivety API",
		"description": "API collection for testing the Drivety application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// If successful, save the tokens",
									"if (pm.response.code === 201 && jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"    console.log('Tokens saved to environment variables');",
									"} else {",
									"    console.log('Error response:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"new_user@drivety.com\",\n    \"password\": \"Password123!\",\n    \"username\": \"newuser\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, save the tokens",
									"if (pm.response.code === 200 && jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"    console.log('Tokens saved to environment variables');",
									"    ",
									"    // Try to extract user ID from token",
									"    try {",
									"        const tokenParts = jsonData.data.accessToken.split('.');",
									"        if (tokenParts.length === 3) {",
									"            const payload = JSON.parse(atob(tokenParts[1]));",
									"            if (payload.userId) {",
									"                pm.environment.set(\"userId\", payload.userId);",
									"                console.log('User ID saved:', payload.userId);",
									"            }",
									"        }",
									"    } catch (e) {",
									"        console.log('Could not extract user ID from token:', e);",
									"    }",
									"} else {",
									"    console.log('Error response:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"driver1@drivety.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login to get access token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, save the tokens",
									"if (pm.response.code === 200 && jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"    console.log('Tokens refreshed and saved to environment variables');",
									"} else {",
									"    console.log('Error refreshing token:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if we have a refresh token",
									"const refreshToken = pm.environment.get(\"refreshToken\");",
									"",
									"if (!refreshToken) {",
									"    console.log('Warning: No refresh token found in environment variables. This request will likely fail.');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh-token",
								"value": "{{refreshToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh access token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response",
									"var jsonData = pm.response.json();",
									"",
									"// Log the full response for debugging",
									"console.log('Response:', JSON.stringify(jsonData, null, 2));",
									"",
									"// Check if the request was successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// If successful, clear the tokens",
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"accessToken\", \"\");",
									"    pm.environment.set(\"refreshToken\", \"\");",
									"    console.log('Tokens cleared from environment variables');",
									"} else {",
									"    console.log('Error during logout:', jsonData);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if we have an access token",
									"const accessToken = pm.environment.get(\"accessToken\");",
									"",
									"if (!accessToken) {",
									"    console.log('Warning: No access token found in environment variables. This request will likely fail.');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate tokens"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Drivers",
			"item": [
				{
					"name": "Create Driver",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"licenseNumber\": \"DL12345678\",\n    \"licenseExpiry\": \"2025-12-31T00:00:00.000Z\",\n    \"phoneNumber\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/drivers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers"
							]
						},
						"description": "Create a new driver"
					},
					"response": []
				},
				{
					"name": "Get All Drivers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/drivers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers"
							]
						},
						"description": "Get all drivers"
					},
					"response": []
				},
				{
					"name": "Get Driver by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/drivers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{driverId}}"
								}
							]
						},
						"description": "Get driver by ID"
					},
					"response": []
				},
				{
					"name": "Get Current User Driver",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/drivers/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								"me"
							]
						},
						"description": "Get driver profile for current user"
					},
					"response": []
				},
				{
					"name": "Update Driver",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Smith\",\n    \"licenseNumber\": \"DL12345678\",\n    \"licenseExpiry\": \"2026-12-31T00:00:00.000Z\",\n    \"phoneNumber\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/drivers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{driverId}}"
								}
							]
						},
						"description": "Update driver information"
					},
					"response": []
				},
				{
					"name": "Update Driver Score",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driverScore\": 85.5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/drivers/:id/score",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								":id",
								"score"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{driverId}}"
								}
							]
						},
						"description": "Update driver score"
					},
					"response": []
				},
				{
					"name": "Delete Driver",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/drivers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"drivers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "driver_id_here"
								}
							]
						},
						"description": "Delete a driver"
					},
					"response": []
				}
			],
			"description": "Driver management endpoints"
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "Create Vehicle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Toyota Camry\",\n    \"year\": 2022,\n    \"plateNumber\": \"ABC123\",\n    \"status\": \"ACTIVE\",\n    \"fuelType\": \"GASOLINE\",\n    \"fuelLevel\": 75.5,\n    \"insuranceExpiry\": \"2025-12-31T00:00:00.000Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/vehicles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Create a new vehicle"
					},
					"response": []
				},
				{
					"name": "Get All Vehicles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Get all vehicles"
					},
					"response": []
				},
				{
					"name": "Get Vehicle by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Get vehicle by ID"
					},
					"response": []
				},
				{
					"name": "Update Vehicle",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Toyota Camry\",\n    \"year\": 2022,\n    \"plateNumber\": \"ABC123\",\n    \"status\": \"MAINTENANCE\",\n    \"fuelType\": \"GASOLINE\",\n    \"fuelLevel\": 50.0,\n    \"insuranceExpiry\": \"2025-12-31T00:00:00.000Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Update vehicle information"
					},
					"response": []
				},
				{
					"name": "Delete Vehicle",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Delete a vehicle"
					},
					"response": []
				},
				{
					"name": "Get Vehicle Components",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id/components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id",
								"components"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Get all components for a vehicle"
					},
					"response": []
				},
				{
					"name": "Update Vehicle Health Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"MAINTENANCE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id/health-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id",
								"health-status"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Update vehicle health status"
					},
					"response": []
				},
				{
					"name": "Get Vehicle Maintenance History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/:id/maintenance-history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								":id",
								"maintenance-history"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{vehicleId}}"
								}
							]
						},
						"description": "Get maintenance history for a vehicle"
					},
					"response": []
				}
			],
			"description": "Vehicle management endpoints"
		},
		{
			"name": "Components",
			"item": [
				{
					"name": "Create Component",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicleId\": \"{{vehicleId}}\",\n    \"componentType\": \"ENGINE\",\n    \"name\": \"V6 Engine\",\n    \"status\": \"GOOD\",\n    \"healthScore\": 95.0,\n    \"expectedLifespan\": 120000,\n    \"metadata\": \"{\\\"manufacturer\\\": \\\"Toyota\\\", \\\"serialNumber\\\": \\\"ENG123456\\\"}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components"
							]
						},
						"description": "Create a new component"
					},
					"response": []
				},
				{
					"name": "Get All Components",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components"
							]
						},
						"description": "Get all components"
					},
					"response": []
				},
				{
					"name": "Get Component by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/components/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Get component by ID"
					},
					"response": []
				},
				{
					"name": "Update Component",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"componentType\": \"ENGINE\",\n    \"name\": \"V6 Engine\",\n    \"status\": \"NEEDS_MAINTENANCE\",\n    \"healthScore\": 75.0,\n    \"expectedLifespan\": 120000,\n    \"metadata\": \"{\\\"manufacturer\\\": \\\"Toyota\\\", \\\"serialNumber\\\": \\\"ENG123456\\\"}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/components/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Update component information"
					},
					"response": []
				},
				{
					"name": "Delete Component",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/components/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Delete a component"
					},
					"response": []
				},
				{
					"name": "Get Component Health Score",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/components/:id/health-score",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id",
								"health-score"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Get health score for a component"
					},
					"response": []
				},
				{
					"name": "Get Component Maintenance Records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/components/:id/maintenance-records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id",
								"maintenance-records"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Get maintenance records for a component"
					},
					"response": []
				},
				{
					"name": "Trigger Component Alert",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"MAINTENANCE_REQUIRED\",\n    \"message\": \"Engine maintenance required\",\n    \"actionRequired\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/components/:id/alert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"components",
								":id",
								"alert"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{componentId}}"
								}
							]
						},
						"description": "Trigger an alert for a component"
					},
					"response": []
				}
			],
			"description": "Component management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}
